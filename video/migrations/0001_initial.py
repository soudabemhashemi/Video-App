# Generated by Django 3.2.5 on 2021-08-31 09:23

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import video.utils.validators
import video.utils.video_code


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('user', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('icon', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Channel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('avatar', models.ImageField(null=True, upload_to='video/avatars/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['png', 'jpg', 'jpeg']), video.utils.validators.FileSizeValidator(max_size=1024000)])),
                ('cover', models.ImageField(null=True, upload_to='video/covers/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['png', 'jpg', 'jpeg']), video.utils.validators.FileSizeValidator(max_size=1024000)])),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CrawledVideo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('source', models.CharField(max_length=32)),
                ('code', models.CharField(max_length=16)),
                ('url', models.URLField(blank=True, null=True)),
                ('download_url', models.URLField(blank=True, null=True)),
                ('channel_name', models.CharField(default='', max_length=64)),
                ('channel_url', models.URLField(blank=True, null=True)),
                ('channel_verified', models.BooleanField(default=False)),
                ('thumbnail_url', models.URLField(blank=True, null=True)),
                ('views', models.IntegerField(default=0)),
                ('likes', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='Playlist',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('channel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='playlists', to='video.channel')),
            ],
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tags', to='video.category')),
            ],
        ),
        migrations.CreateModel(
            name='Video',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('code', models.CharField(default=video.utils.video_code.generate_video_code, max_length=8, unique=True)),
                ('title', models.CharField(max_length=200)),
                ('thumbnail', models.ImageField(blank=True, null=True, upload_to='video/thumbnails/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['png', 'jpg', 'jpeg']), video.utils.validators.FileSizeValidator(max_size=512000)])),
                ('file', models.FileField(upload_to='video/videos/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['mp4', 'mov', 'wmv', 'avi', 'flv', 'mkv']), video.utils.validators.FileSizeValidator(max_size=10737418240)])),
                ('description', models.TextField(blank=True, null=True)),
                ('playlist_order', models.IntegerField(blank=True, null=True)),
                ('total_views', models.PositiveIntegerField(default=0)),
                ('duration', models.DurationField()),
                ('is_visible', models.BooleanField(default=False)),
                ('is_verified', models.BooleanField(default=False)),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='videos', to='video.category')),
                ('channel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='videos', to='video.channel')),
                ('playlist', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='videos', to='video.playlist')),
                ('source', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='video.crawledvideo')),
                ('tags', models.ManyToManyField(blank=True, related_name='videos', to='video.Tag')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ViewReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('video', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='views', to='video.video')),
                ('visitor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='views', to='user.visitor')),
            ],
        ),
        migrations.CreateModel(
            name='Subscription',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subscribed_at', models.DateTimeField(auto_now_add=True)),
                ('from_channel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subscriber', to='video.channel')),
                ('to_channel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subscription', to='video.channel')),
            ],
        ),
        migrations.CreateModel(
            name='Report',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('acted_at', models.DateTimeField(auto_now_add=True)),
                ('reason', models.IntegerField(choices=[(1, 'هرزنامه یا گمراه کننده'), (3, 'برهنگی یا محتوای جنسی'), (5, 'اعمال مضر یا خطرناک'), (6, 'کودک آزاری'), (7, 'تروریسم را ترویج می دهد'), (13, 'اطلاعات غلط'), (15, 'نقض مالکیت معنوی'), (18, 'توهین به قومیت\u200cها یا نژادپرستی'), (20, 'مغایرت داشتن عنوان و توضیح با محتوای ویدیو'), (22, 'سایر')])),
                ('description', models.TextField(blank=True)),
                ('result', models.IntegerField(blank=True, choices=[(1, 'accepted'), (2, 'rejected'), (3, 'waiting')], default=3, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('video', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reports', to='video.video')),
            ],
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField()),
                ('sent_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('video', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='video.video')),
            ],
        ),
        migrations.AddField(
            model_name='channel',
            name='subscriptions',
            field=models.ManyToManyField(blank=True, related_name='subscribers', through='video.Subscription', to='video.Channel'),
        ),
        migrations.AddField(
            model_name='channel',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='WatchLater',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_watched', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('watched_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('video', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='watch_laters', to='video.video')),
            ],
            options={
                'unique_together': {('user', 'video')},
            },
        ),
        migrations.CreateModel(
            name='Like',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('acted_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('video', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='likes', to='video.video')),
            ],
            options={
                'unique_together': {('user', 'video')},
            },
        ),
        migrations.CreateModel(
            name='Dislike',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('acted_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('video', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='dislikes', to='video.video')),
            ],
            options={
                'unique_together': {('user', 'video')},
            },
        ),
    ]
